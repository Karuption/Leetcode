using LeetCode.Medium._134_Gas_Station;

namespace LeetCodeTests.Medium._134_Gas_Station; 

public class SolutionTests {
    [InlineData(new[] { 1, 2, 3, 4, 5 }, new[] { 3, 4, 5, 1, 2 }, 3)]
    [InlineData(new[] { 2, 3, 4 }, new[] { 3, 4, 3 }, -1)]
    [InlineData(new[]{67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66},
    new[]{27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26},
    74)]
    [InlineData(new[]{4,5,2,6,5,3},new[]{3,2,7,3,2,9},-1)]
    [Theory]
    public void BaseTests(int[] gas, int[] cost, int expected) {
        var sut = new Solution();
        var actual = sut.CanCompleteCircuit(gas, cost);
        
        Assert.Equal(expected, actual);
    }
    
}